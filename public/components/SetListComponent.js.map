{"version":3,"sources":["/client/js/components/SetListComponent.js"],"names":["window","FC","undefined","SetListComponent","state","sets","loadSets","UserData","data","setState","setId","$","ajax","url","method","done","ReactRouter","hashHistory","push","sortSets","console","log","sort","a","b","name","cards","length","noSetsMessaging","activeAlpha","activeNum","alphabetizeSets","sizeOrderSets","map","set","index","id","description","deleteSet","addCards","navigateToQuiz","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAW;AAAA,MAEJE,gBAFI;AAAA;;AAIR,gCAAc;AAAA;;AAAA;;AAGZ,YAAKC,KAAL,GAAa;AACXC,cAAM;AADK,OAAb;AAHY;AAMb;;AAVO;AAAA;AAAA,0CAYY;AAClB,aAAKC,QAAL;AACD;AAdO;AAAA;AAAA,iCAgBG;AAAA;;AAETL,WAAGM,QAAH,CAAYD,QAAZ,CAAqB,UAACE,IAAD,EAAU;AAC7B,iBAAKC,QAAL,CAAc;AACZJ,kBAAMG,KAAKH;AADC,WAAd;AAGD,SAJD;AAMD;AAxBO;AAAA;AAAA,gCA0BEK,KA1BF,EA0BS;AAAA;;AACfC,UAAEC,IAAF,CAAO;AACLC,eAAK,eAAeH,KADf;AAELI,kBAAQ;AAFH,SAAP,EAICC,IAJD,CAIM,YAAM;AACV,iBAAKT,QAAL;AACD,SAND;AAOD;AAlCO;AAAA;AAAA,+BAoCCI,KApCD,EAoCQ;AACdM,oBAAYC,WAAZ,CAAwBC,IAAxB,CAA6B,UAAUR,KAAvC;AACD;AAtCO;AAAA;AAAA,qCAwCOA,KAxCP,EAwCc;AACpBM,oBAAYC,WAAZ,CAAwBC,IAAxB,CAA6B,UAAUR,KAAV,GAAkB,UAA/C;AACD;AA1CO;AAAA;AAAA,wCA4CS;AACf,YAAIS,WAAW,KAAKf,KAAL,CAAWC,IAA1B;AACA;AACAe,gBAAQC,GAAR,CAAY,iBAAZ,EAA8BF,QAA9B;AACA;AACAA,iBAASG,IAAT,CAAc,UAASC,CAAT,EAAWC,CAAX,EAAa;;AAEzB,cAAID,EAAEE,IAAF,GAASD,EAAEC,IAAf,EAAoB;AAClB,mBAAO,CAAC,CAAR;AACD;AACD,cAAIF,EAAEE,IAAF,GAASD,EAAEC,IAAf,EAAoB;AAClB,mBAAO,CAAP;AACD;AACD,iBAAO,CAAP;AAED,SAVD;;AAYA,aAAKhB,QAAL,CAAc;AACbJ,gBAAKc,QADQ;AAEbG,gBAAK;AAFQ,SAAd;AAID;AAjEO;AAAA;AAAA,sCAmEO;AACb,YAAIH,WAAW,KAAKf,KAAL,CAAWC,IAA1B;;AAEAc,iBAASG,IAAT,CAAc,UAASC,CAAT,EAAWC,CAAX,EAAa;AACzB,cAAID,EAAEG,KAAF,CAAQC,MAAR,GAAiBH,EAAEE,KAAF,CAAQC,MAA7B,EAAoC;AAClC,mBAAO,CAAP;AACD;AACD,cAAIJ,EAAEG,KAAF,CAAQC,MAAR,GAAiBH,EAAEE,KAAF,CAAQC,MAA7B,EAAoC;AAClC,mBAAO,CAAC,CAAR;AACD;AACD,iBAAO,CAAP;AACD,SARD;;AAUA,aAAKlB,QAAL,CAAc;AACZJ,gBAAKc,QADO;AAEZG,gBAAK;AAFO,SAAd;AAID;AApFO;AAAA;AAAA,+BAsFC;AAAA;;AACPF,gBAAQC,GAAR,CAAY,gBAAZ,EAA8B,KAAKjB,KAAnC;;AAEA,YAAIwB,eAAJ;AACA,YAAI,KAAKxB,KAAL,CAAWC,IAAX,CAAgBsB,MAAhB,KAA2B,CAA/B,EAAkC;AAChCC,4BAAkB;AAAA;AAAA;AAAA;AAAA,WAAlB;AACD;;AAED,YAAIC,cAAc,UAAlB;AACA,YAAIC,YAAY,UAAhB;AACA,YAAI,KAAK1B,KAAL,CAAWkB,IAAX,KAAmB,IAAvB,EAA4B;AAC1B,cAAG,KAAKlB,KAAL,CAAWkB,IAAX,KAAmB,QAAtB,EAA+B;AAC7BO,0BAAc,UAAd;AACAC,wBAAY,QAAZ;AACD,WAHD,MAIK,IAAI,KAAK1B,KAAL,CAAWkB,IAAX,KAAmB,OAAvB,EAAgC;AACnCO,0BAAc,QAAd;AACAC,wBAAW,UAAX;AACD;AAEF;;AAED,eAAO;AAAA;AAAA,YAAK,WAAU,UAAf;AACL;AAAA;AAAA;AAAA;AAAA,WADK;AAGL;AAAA;AAAA,cAAK,WAAU,MAAf;AACE;AAAA;AAAA,gBAAK,WAAWD,WAAhB,EAA6B,SAAS,mBAAM;AAAC,yBAAKE,eAAL;AAAwB,iBAArE;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAK,WAAWD,SAAhB,EAA2B,SAAS,mBAAM;AAAC,yBAAKE,aAAL;AAAsB,iBAAjE;AAAA;AAAA;AAFF,WAHK;AASJJ,yBATI;AAWL;AAAC,uBAAD,CAAa,IAAb;AAAA,cAAkB,IAAG,aAArB;AAAA;AAAA,WAXK;AAaL;AAAA;AAAA;AACC,iBAAKxB,KAAL,CAAWC,IAAX,CAAgB4B,GAAhB,CAAoB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnC,qBAAO;AAAA;AAAA,kBAAI,KAAKD,IAAIE,EAAb,EAAiB,WAAU,KAA3B;AACL;AAAA;AAAA,oBAAK,WAAU,UAAf;AAA2BF,sBAAIT;AAA/B,iBADK;AAEL;AAAA;AAAA,oBAAK,WAAU,iBAAf;AAAA;AAA8CS,sBAAIR,KAAJ,CAAUC;AAAxD,iBAFK;AAGL;AAAA;AAAA;AAAIO,sBAAIG;AAAR,iBAHK;AAKL;AAAA;AAAA,oBAAK,WAAU,mBAAf,EAAmC,SAAS,mBAAM;AAAC,6BAAKC,SAAL,CAAeJ,IAAIE,EAAnB;AAAuB,qBAA1E;AAAA;AAAA,iBALK;AAML;AAAA;AAAA,oBAAK,WAAU,kBAAf,EAAkC,SAAS,mBAAM;AAAC,6BAAKG,QAAL,CAAcL,IAAIE,EAAlB;AAAsB,qBAAxE;AAAA;AAAA,iBANK;AAOL;AAAA;AAAA,oBAAK,WAAU,aAAf,EAA6B,SAAS,mBAAM;AAAC,6BAAKI,cAAL,CAAoBN,IAAIE,EAAxB;AAA4B,qBAAzE;AAAA;AAAA;AAPK,eAAP;AAUD,aAXA;AADD;AAbK,SAAP;AA4BD;AAxIO;;AAAA;AAAA,IAEqBK,MAAMC,SAF3B;;AA2IVzC,KAAGE,gBAAH,GAAsBA,gBAAtB;AACD,CA5ID","file":"SetListComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetListComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        sets: []\n      }\n    }\n\n    componentDidMount() {\n      this.loadSets();\n    }\n\n    loadSets() {\n\n      FC.UserData.loadSets((data) => {\n        this.setState({\n          sets: data.sets\n        });\n      });\n\n    }\n\n    deleteSet(setId) {\n      $.ajax({\n        url: '/api/sets/' + setId,\n        method: 'DELETE'\n      })\n      .done(() => {\n        this.loadSets();\n      });\n    }\n\n    addCards(setId) {\n      ReactRouter.hashHistory.push('/set/' + setId);\n    }\n\n    navigateToQuiz(setId) {\n      ReactRouter.hashHistory.push('/set/' + setId + '/quizzer');\n    }\n\n    alphabetizeSets(){\n      var sortSets = this.state.sets;\n      //test\n      console.log(\"alphabetize set\",sortSets);\n      //\n      sortSets.sort(function(a,b){\n\n        if (a.name < b.name){\n          return -1;\n        }\n        if (a.name > b.name){\n          return 1;\n        }\n        return 0;\n\n      })\n\n      this.setState({\n       sets:sortSets,\n       sort:\"alpha\"\n      })\n    }\n\n    sizeOrderSets(){\n      var sortSets = this.state.sets;\n\n      sortSets.sort(function(a,b){\n        if (a.cards.length < b.cards.length){\n          return 1;\n        }\n        if (a.cards.length > b.cards.length){\n          return -1;\n        }\n        return 0;\n      })\n\n      this.setState({\n        sets:sortSets,\n        sort:\"number\"\n      })\n    }\n\n    render() {\n      console.log('SetList.render', this.state);\n\n      var noSetsMessaging;\n      if (this.state.sets.length === 0) {\n        noSetsMessaging = <p>You do not have any sets! Create one.</p>\n      }\n\n      var activeAlpha = \"inactive\";\n      var activeNum = \"inactive\";\n      if (this.state.sort !==null){\n        if(this.state.sort ==='number'){\n          activeAlpha = 'inactive';\n          activeNum = 'active';\n        }\n        else if (this.state.sort ==='alpha') {\n          activeAlpha = 'active';\n          activeNum ='inactive';\n        }\n\n      }\n\n      return <div className=\"set-list\">\n        <h2>Set List</h2>\n\n        <div className=\"sort\">\n          <div className={activeAlpha} onClick={() => {this.alphabetizeSets();}}>by name</div>\n          <div className={activeNum} onClick={() => {this.sizeOrderSets();}}>by # of cards</div>\n        </div>\n\n\n        {noSetsMessaging}\n\n        <ReactRouter.Link to=\"/create-set\">Create new set</ReactRouter.Link>\n\n        <ul>\n        {this.state.sets.map((set, index) => {\n          return <li key={set.id} className=\"set\">\n            <div className=\"set-name\">{set.name}</div>\n            <div className=\"number-of-cards\"># of cards: {set.cards.length}</div>\n            <p>{set.description}</p>\n\n            <div className=\"button delete-set\" onClick={() => {this.deleteSet(set.id)}}>delete</div>\n            <div className=\"button add-cards\" onClick={() => {this.addCards(set.id)}}>add cards</div>\n            <div className=\"button quiz\" onClick={() => {this.navigateToQuiz(set.id)}}>quiz</div>\n\n          </li>\n        })}\n        </ul>\n      </div>;\n    }\n  }\n\n  FC.SetListComponent = SetListComponent;\n})();\n"]}