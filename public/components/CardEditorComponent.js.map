{"version":3,"sources":["/client/js/components/CardEditorComponent.js"],"names":["window","FC","undefined","CardEditorComponent","evt","preventDefault","frontInput","value","backInput","console","log","cb","UserData","addCardToSet","props","params","setId","submitCard","input","ReactRouter","browserHistory","goBack","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAW;AAAA,MAEJE,mBAFI;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAIGC,GAJH,EAIQ;AAAA;;AACdA,YAAIC,cAAJ;;AAEA,YAAG,KAAKC,UAAL,CAAgBC,KAAhB,KAA0B,EAA1B,IAAgC,KAAKC,SAAL,CAAeD,KAAf,KAAwB,EAA3D,EAA8D;AAC5D;AACAE,kBAAQC,GAAR,CAAY,oBAAZ,EAAiC,KAAKJ,UAAL,CAAgBC,KAAjD,EAAuD,KAAKC,SAAL,CAAeD,KAAtE;AACA;AACD;;AAED,YAAII,KAAK,SAALA,EAAK,GAAM;AACb;AACA,iBAAKL,UAAL,CAAgBC,KAAhB,GAAwB,EAAxB;AACA,iBAAKC,SAAL,CAAeD,KAAf,GAAuB,EAAvB;AACD,SAJD;;AAMCN,WAAGW,QAAH,CAAYC,YAAZ,CAAyB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAA3C,EAAkD,KAAKV,UAAL,CAAgBC,KAAlE,EAAyE,KAAKC,SAAL,CAAeD,KAAxF,EAA+FI,EAA/F;AAEA;AArBK;AAAA;AAAA,+BAuBC;AAAA;;AACP,eAAO;AAAA;AAAA,YAAK,WAAU,aAAf;AACL;AAAA;AAAA,cAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA;AAAA;AAAA;AAAA,aAFF;AAGE;AAAA;AAAA;AAAA;AAAA,aAHF;AAIE;AAAA;AAAA;AAAA;AAAA;AAJF,WADK;AAQL;AAAA;AAAA,cAAM,UAAU,kBAACP,GAAD,EAAS;AAAE,uBAAKa,UAAL,CAAgBb,GAAhB;AAAsB,eAAjD;AAEE,8CAAU,aAAY,OAAtB,EAA8B,KAAK,aAACc,KAAD,EAAW;AAAC,uBAAKZ,UAAL,GAAkBY,KAAlB;AAA0B,eAAzE,GAFF;AAIE,2CAAO,aAAY,MAAnB,EAA0B,KAAK,aAACA,KAAD,EAAW;AAAC,uBAAKV,SAAL,GAAiBU,KAAjB;AAAyB,eAApE,GAJF;AAME;AAAA;AAAA;AAAA;AAAA,aANF;AAOE;AAAA;AAAA,gBAAQ,SAAS,iBAACd,GAAD,EAAS;AAACe,8BAAYC,cAAZ,CAA2BC,MAA3B;AAAqC,iBAAhE;AAAA;AAAA;AAPF;AARK,SAAP;AAoBD;AA5CO;;AAAA;AAAA,IAEwBC,MAAMC,SAF9B;;AAgDVtB,KAAGE,mBAAH,GAAyBA,mBAAzB;AAED,CAlDD","file":"CardEditorComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class CardEditorComponent extends React.Component {\n\n    submitCard(evt) {\n      evt.preventDefault();\n\n      if(this.frontInput.value === '' || this.backInput.value=== ''){\n        //error on no card front or back text\n        console.log('no front/back info',this.frontInput.value,this.backInput.value)\n        return;\n      }\n\n      var cb = () => {\n        // ReactRouter.browserHistory.goBack();\n        this.frontInput.value = '';\n        this.backInput.value = '';\n      };\n\n       FC.UserData.addCardToSet(this.props.params.setId, this.frontInput.value, this.backInput.value, cb);\n\n      }\n\n    render() {\n      return <div className=\"card-editor\">\n        <div className=\"directions\">\n          <h2>The Card Editor</h2>\n          <p>Enter the data on the front and back of your card.</p>\n          <p>When completed with the card click the submit button and your cards will be added to the set.</p>\n          <p> When finished adding cards click the done button.</p>\n        </div>\n\n        <form onSubmit={(evt) => { this.submitCard(evt);}}>\n\n          <textarea placeholder=\"front\" ref={(input) => {this.frontInput = input; }} />\n\n          <input placeholder=\"back\" ref={(input) => {this.backInput = input; }} />\n\n          <button>Submit</button>\n          <button onClick={(evt) => {ReactRouter.browserHistory.goBack();}}>Done</button>\n\n        </form>\n\n      </div>\n    }\n\n  }\n\n  FC.CardEditorComponent = CardEditorComponent;\n\n})();\n"]}