{"version":3,"sources":["components/QuizzerComponent.js"],"names":["window","FC","undefined","QuizzerComponent","state","currentCard","showFront","completedQuiz","cb","set","shuffledCards","_","shuffle","cards","slice","setState","UserData","getSet","props","params","setId","copiedState","Object","assign","card","correctCount","incrementCorrectCountOnCard","id","currentPosition","length","ReactRouter","browserHistory","goBack","incorrectCount","incrementIncorrectCountOnCard","cardShower","cardNavigation","textToShow","front","back","evt","cardClicked","markCorrect","markIncorrect","React","Component"],"mappings":"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","file":"QuizzerComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class QuizzerComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        currentCard: 0,\n        showFront: true,\n        completedQuiz: false\n      }\n    }\n\n    componentDidMount() {\n\n      var cb = (set) => {\n\n        // copy and shuffle array\n        var shuffledCards = _.shuffle(set.cards.slice(0));\n\n        this.setState({\n          cards: shuffledCards,\n          currentCard: 0,\n          showFront: true\n        });\n      };\n\n      FC.UserData.getSet(this.props.params.setId, cb);\n\n    }\n\n    cardClicked() {\n      var copiedState = Object.assign({}, this.state);\n      copiedState.showFront = !copiedState.showFront;\n\n      this.setState(copiedState);\n    }\n\n    markCorrect() {\n\n      var card = this.state.cards[this.state.currentCard];\n      card.correctCount += 1;\n      FC.UserData.incrementCorrectCountOnCard(this.props.params.setId, card.id, () => {});\n\n      var currentPosition = this.state.currentCard;\n      if (currentPosition + 1 >= this.state.cards.length) {\n        ReactRouter.browserHistory.goBack();\n        return;\n      }\n\n      var copiedState = Object.assign({}, this.state);\n      copiedState.currentCard += 1;\n      this.setState(copiedState);\n    }\n\n    markIncorrect() {\n      var card = this.state.cards[this.state.currentCard];\n      card.incorrectCount += 1;\n      FC.UserData.incrementIncorrectCountOnCard(this.props.params.setId, card.id, () => {});\n\n      var currentPosition = this.state.currentCard;\n      if (currentPosition + 1 >= this.state.cards.length) {\n        ReactRouter.browserHistory.goBack();\n        return;\n      }\n\n      var copiedState = Object.assign({}, this.state);\n      copiedState.currentCard += 1;\n      this.setState(copiedState);\n    }\n\n    render() {\n\n      var cardShower;\n      var cardNavigation;\n      if (this.state.cards !== undefined) {\n        var currentCard = this.state.cards[this.state.currentCard];\n        var textToShow = this.state.showFront ? currentCard.front: currentCard.back;\n\n        cardShower = <div>\n          <div>Card count: {this.state.cards.length}</div>\n          <div\n            className=\"card\"\n            onClick={(evt) => { this.cardClicked(evt); }}>\n            {textToShow}</div>\n        </div>\n\n\n        cardNavigation = <div className=\"card-navigation\">\n          <div className=\"correct\" onClick={() => { this.markCorrect();}}>Correct</div>\n          <div className=\"incorrect\" onClick={() => {this.markIncorrect();}}>Incorrect</div>\n        </div>;\n      }\n\n      return <div className=\"quizzer\">\n        The Quizzer\n\n        {cardShower}\n        {cardNavigation}\n      </div>\n    }\n\n  }\n\n  FC.QuizzerComponent = QuizzerComponent;\n\n})();\n"]}