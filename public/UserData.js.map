{"version":3,"sources":["UserData.js"],"names":["window","FC","undefined","userData","UserData","loadSets","cb","$","ajax","url","done","data","getSet","setId","setExists","set","sets","find","x","id","addCardToSet","front","back","method","incrementIncorrectCountOnCard","cardId","position","card","cards","forEach","index","incorrectCount","incrementCorrectCountOnCard","correctCount"],"mappings":"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","file":"UserData.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  var userData;\n\n  window.FC.UserData = {\n\n    loadSets(cb) {\n      $.ajax({\n        url: '/api/sets'\n      })\n      .done((data) => {\n        userData = data;\n        cb(data)\n      });\n    },\n\n    getSet: (setId, cb) => {\n\n      var setExists = () => {\n        var set = userData.sets.find((x) => { return x.id == setId});\n        cb(set);\n      };\n\n      if (userData === undefined) {\n        FC.UserData.loadSets(setExists);\n      }\n      else {\n        setExists();\n      }\n    },\n\n    addCardToSet: (setId, front, back, cb) => {\n\n      $.ajax({\n        url: '/api/sets/' + setId + '/card',\n        method: 'POST',\n        data: {\n          setId: setId,\n          front: front,\n          back: back\n        }\n      })\n      .done((data) => {\n        FC.UserData.loadSets(cb)\n      });\n    },\n\n    incrementIncorrectCountOnCard: (setId, cardId, cb) => {\n      var set = userData.sets.find((x) => { return x.id == setId });\n      // We have to find the position to update the server correctly.\n      // We need the card to update the correct count in memory.\n      var position;\n      var card;\n      set.cards.forEach((x, index) => {\n        if (x.id == cardId) {\n          card = x;\n          position = index;\n        }\n      });\n\n      card.incorrectCount += 1;\n\n      $.ajax({\n        url: '/api/sets/' + setId + '/card/' + position + '/incorrect',\n        method: 'POST'\n      })\n      .done((data) => {\n        cb();\n      });\n\n\n    },\n\n    incrementCorrectCountOnCard: (setId, cardId, cb) => {\n\n      var set = userData.sets.find((x) => { return x.id == setId });\n\n      // We have to find the position to update the server correctly.\n      // We need the card to update the correct count in memory.\n      var position;\n      var card;\n      set.cards.forEach((x, index) => {\n        if (x.id == cardId) {\n          card = x;\n          position = index;\n        }\n      });\n\n      card.correctCount += 1;\n\n      $.ajax({\n        url: '/api/sets/' + setId + '/card/' + position + '/correct',\n        method: 'POST'\n      })\n      .done((data) => {\n        cb();\n      });\n\n\n    }\n\n  };\n\n})();\n"]}